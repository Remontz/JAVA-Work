package com.kacygilbert.authentication.services;

import java.util.Optional;

import org.mindrot.jbcrypt.BCrypt;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.validation.BindingResult;

import com.kacygilbert.authentication.models.LoginUser;
import com.kacygilbert.authentication.models.User;
import com.kacygilbert.authentication.repositories.UserRepository;

@Service
 class UserService {

    @Autowired
    private UserRepository userRepo;
    
    // TO-DO: Write register and login methods!
    public User register(User newUser, BindingResult results) {
        // TO-DO: Additional validations!
    	if(newUser.getPassword().equals(newUser.getConfirm())) {
    		// Hash password
    		newUser.setPassword(BCrypt.hashpw(newUser.getPassword(), BCrypt.gensalt()));
    		// Store in DB & return newUser
    		return userRepo.save(newUser);
    	} else {
    		results.rejectValue("confirm", "Matches", "Passwords do not match");
    	}
        return null;
    }
    public User login(LoginUser newLoginObject, BindingResult result) {
    	Optional<User> user = userRepo.findByEmail();
        // TO-DO: Additional validations!
    	
        return null;
    }
}
